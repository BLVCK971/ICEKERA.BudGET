@using BudGET.MobileApp.Contracts;
@using BudGET.MobileApp.ViewModels.CompteViewModels;
@page "/compte/indexcompte"

<h3>Index</h3>

<div class="m-2 d-flex justify-content-end">
    <button @onclick="Back" class="btn btn-secondary mx-3">Back</button>
    <button @onclick="AddElement" class="btn btn-success">Add</button>
</div>

@if (Liste == null)
{
    <p><em>Loading...</em></p>
    <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Intitulé</th>
                <th>Montant</th>
                <th>Compte Courant ?</th>
                <th>Commandes</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ev in Liste)
            {
                <tr>
                    <td>@ev.Intitule </td>
                    <td>@ev.Montant €</td>
                    <th>
                        @if (ev.EstCompteCourant == true)
                        {
                            <span class="oi oi-check" aria-hidden="true"></span>
                        }
                        else { }
                    </th>
                    <td>
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button @onclick="@(e => UpdateElement(ev.Id))" type="button" class="btn btn-primary">Modifier</button>
                            <button @onclick="@(e => DeleteElement(ev.Id))" type="button" class="btn btn-danger">Supprimer</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    [Inject]
    public ICompteDataService CompteDataService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private ICollection<CompteListViewModel> Liste { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Liste = await CompteDataService.GetAllComptes();
    }

    protected void AddElement()
    {
        NavigationManager.NavigateTo("/compte/createcompte");
    }
    protected void UpdateElement(Guid ElementId)
    {
        NavigationManager.NavigateTo("/compte/updatecompte/" + ElementId);
    }
    protected void DeleteElement(Guid ElementId)
    {
        var response = CompteDataService.DeleteCompte(ElementId);
        NavigationManager.NavigateTo("/compte/indexcompte", true);
    }
    protected void Back()
    {
        NavigationManager.NavigateTo("/admin");
    }
}
